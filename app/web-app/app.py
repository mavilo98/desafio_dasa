from flask import Flask, render_template, jsonify, request, send_file
import subprocess
import os

app = Flask(__name__)

# Web page route
@app.route('/')
def index():
    return render_template('index.html')

# API route to run the Snakemake commands and return the result file
@app.route('/api/run_snakemake', methods=['GET'])
def run_snakemake():
    try:
        # Get the 'dp' value from the query parameter
        dp_value = request.args.get('dp', default=0, type=int)  # Default to 0 if not provided

        # The command to activate the virtual environment, run snakemake, and deactivate
        activate_env = f"snakemake --cores 2 --config dp={dp_value}"
        
        # Specify the folder where the command should be executed
        working_directory = '/usr/src/app/app/process_data'

        # Run the command in the specified folder
        process = subprocess.run(activate_env, 
                                 shell=True, 
                                 check=True, 
                                 stdout=subprocess.PIPE, 
                                 stderr=subprocess.PIPE, 
                                 executable='/bin/bash', 
                                 cwd=working_directory)
        
        # Path to the output file generated by Snakemake
        result_file = '/usr/src/app/app/results/result.vcf.gz'  

        # Check if the file exists
        if os.path.exists(result_file):
            # Send a success response with the path to the result file
            return jsonify(message="Snakemake ran successfully. ", file_url="/download_result"), 200

        else:
            # If the file does not exist, return an error
            return jsonify(message="Snakemake ran, but the output file was not found."), 404

    except subprocess.CalledProcessError as e:
        # Return error message if something goes wrong
        return jsonify(message="Error running Snakemake.", error=e.stderr.decode('utf-8')), 500

# Route to download the result file
@app.route('/download_result')
def download_result():
    result_file = '/usr/src/app/app/results/result.vcf.gz'
    
    # Check if the file exists
    if os.path.exists(result_file):
        # Return the file for download
        return send_file(result_file, as_attachment=True)
    
    return jsonify(message="Result file not found."), 404

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)